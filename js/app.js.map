{"version":3,"file":"app.js","sources":["../node_modules/composi/lib/h.js","../node_modules/composi/lib/patch.js","../node_modules/composi/lib/mixin.js","../node_modules/composi/lib/component.js","../dev/components/title.js","../dev/components/starRating.js","../dev/components/movie/movieCard.js","../dev/components/movie/movieList.js","../dev/services/movies.js","../dev/services/movieService.js","../dev/components/movie/movies.js","../dev/app.js"],"sourcesContent":["/**\n * Hyperscript function. Enables definition of HTML/SVG using functions.\n * @param {string} type The name of the HTML or SVG tag to create.\n * @param {object} props And object of property/value pairs.\n * @param {string, number, boolean, any[]} children Any child elements.\n */\nexport function h(type, props, ...args) {\n  let node\n  const children = []\n\n  // Go thru args from front to back.\n  while (args.length) {\n    // If child is array, process.\n    if (Array.isArray((node = args.shift()))) {\n      node.map(item => args.push(item))\n    // Else check if child is string or number.\n    } else if (node != null && typeof node !== 'boolean') {\n      typeof node === \"number\" ? node = node + '' : node\n      children.push(node)\n    }\n  }\n  \n  return typeof type === \"string\" \n    ? {type, props: props || {}, children } \n    : type(props || {}, children)\n}\n","/**\n * A function to merge two objects together. The properties of the second object will overwrite any matching properties in the first object.\n * @param {Object} obj1 The first object to merge.\n * @param {Object} obj2 The second object to merge.\n */\nfunction mixin(obj1, obj2) {\n  const result = {}\n  for (let i in obj1) {\n    result[i] = obj1[i]\n  }\n  for (let i in obj2) {\n    result[i] = obj2[i]\n  }\n  return result\n}\n\n/**\n * @constructor \n * @param {node} oldNode Original node or null.\n * @param {node} newNode New node.\n * @param {node} element The component root element.\n * @param {node} container The container element in which component is rendered.\n */\nexport function patch(oldNode, newNode, element, container) {\n  return diffAndPatch(container || document.body, element, oldNode, newNode)\n}\n\n/**\n * Patch functions:\n * setProps \n * createNode\n * createElement\n * getKey\n * updateElement\n * removeElement\n * diffAndPatch\n */\n\n/**\n * Function to set properties and attributes on element.\n * @param {node} element \n * @param {string} name \n * @param {string|number|boolean} value \n * @param {string|number|boolean} oldValue \n */\nfunction setProps(element, name, value, oldValue) {\n  if (name === 'key') {\n  } else if (name === 'style' && typeof value !== 'string') {\n    for (let name in mixin(oldValue, (value = value || {}))) {\n      element.style[name] = value[name] + \"\" || ''\n    }\n  } else {\n    if (value === 0) value = value + \"\"\n    // Handle cases where 'className' is used:\n    if (name === 'className') name = 'class'\n    if (/^on.*$/.test(name)) name = name.toLowerCase()\n    // Cannot set SVG properties this way, so test:\n    if (element.namespaceURI !== 'http://www.w3.org/2000/svg') element[name] = value\n\n    // In case of inline events, value would be function.\n    // This avoids resetting them if they were set above as a property.\n    if (typeof value !== 'function') {\n      if (!!value) {\n        // Support SVG 'xlink:href' property:\n        if (name === 'xlink-href') {\n          element.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value)\n          element.setAttribute('href', value)\n        } else {\n          element.setAttribute(name, value)\n        }\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n\n/**\n * Function to create an HTML or SVG node.\n * @param {node} node node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createNode(node, svg) {\n  const element = (svg = svg || node.type === \"svg\")\n  ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n  : document.createElement(node.type)\n\n  Object.keys(node.props).forEach(key => setProps(element, key, node.props[key]))\n  node.children.map(child => element.appendChild(createElement(child, svg)))\n  return element\n}\n\n/**\n * Function to convert hyperscript/JSX into DOM nodes.\n * @param {jsx|hyperscript} node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createElement(node, svg) {\n  return typeof node === \"string\" ? document.createTextNode(node) : createNode(node, svg)\n}\n\n/**\n * Function to get a node's key.\n * @param {node} node \n */\nfunction getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n\n/**\n * Update an element with new values for properties and/or children.\n * @param {Element} element \n * @param {node} oldProps \n * @param {object} props \n */\nfunction updateElement(element, oldProps, props) {\n  Object.keys(mixin(oldProps, props)).forEach(key => {\n    let value = props[key]\n    let oldValue = key === \"value\" || key === \"checked\" ? element[key] : oldProps[key]\n\n    if (value !== oldValue) setProps(element, key, value, oldValue)\n  })\n}\n\n/**\n * Function to remove element from DOM.\n * @param {node} container The container of the element to remove.\n * @param {node} element The element to remove.\n */\nconst removeElement = (container, element) => container.removeChild(element)\n\n/**\n * Function to patch DOM. Diffs virtual nodes, then patches the DOM.\n * @param {node} container \n * @param {node} element \n * @param {node} oldNode \n * @param {node} newNode \n * @param {boolean} svg \n * @param {node} nextSibling \n */\nfunction diffAndPatch(container, element, oldNode, newNode, svg, nextSibling) {\n  // There is no oldNode, so this is first render.\n  if (oldNode == null) {\n    element = container.insertBefore(createElement(newNode, svg), element)\n  // There's an oldNode, so patch.\n  } else if (newNode.type != null && newNode.type === oldNode.type) {\n    updateElement(element, oldNode.props, newNode.props)\n\n    svg = svg || newNode.type === \"svg\"\n    const len = newNode.children.length\n    let oldLen = oldNode.children.length\n    let oldKeyed = {}\n    let oldElements = []\n    let keyed = {}\n\n    let k = 0\n    while (k < oldLen) {\n      let oldElement = (oldElements[k] = element.childNodes[k])\n      let oldChild = oldNode.children[k]\n      let oldKey = getKey(oldChild)\n      if (null != oldKey) oldKeyed[oldKey] = [oldElement, oldChild]\n      k++\n    }\n\n    let i = 0, j = 0\n    while (j < len) {\n      let oldElement = oldElements[i]\n      let oldChild = oldNode.children[i]\n      let newChild = newNode.children[j]\n      let oldKey = getKey(oldChild)\n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n      \n      let newKey = getKey(newChild)\n      let keyedNode = oldKeyed[newKey] || []\n      if (null == newKey) {\n        if (null == oldKey) {\n          diffAndPatch(element, oldElement, oldChild, newChild, svg)\n          j++\n        }\n        i++\n      } else {\n        oldKey === newKey ? diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) && i++ :\n        keyedNode[0] ? element.insertBefore(keyedNode[0], oldElement) && diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) : diffAndPatch(element, oldElement, null, newChild, svg)\n        \n        keyed[newKey] = newChild\n        j++\n      }\n    }\n\n    while (i < oldLen) {\n      let oldChild = oldNode.children[i]\n      let oldKey = getKey(oldChild)\n      if (null == oldKey) removeElement(element, oldElements[i])\n      i++\n    }\n\n    Object.keys(oldKeyed).forEach(key => {\n      let keyedNode = oldKeyed[key]\n      let reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0])\n      }\n    })\n  } else if (element && newNode !== element.nodeValue) {\n    if (typeof newNode === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = newNode\n    } else {\n      element = container.insertBefore(\n        createElement(newNode, svg),\n        (nextSibling = element)\n      )\n      removeElement(container, nextSibling, oldNode.data)\n    }\n  }\n  return element\n}\n","/**\n * A mixin function used for updating component state.\n * @param {object} obj1 An object as the target.\n * @param {object} obj2 An object of properties to target.\n */\nexport const mixin = (obj1, obj2) => {\n  Object.keys(obj2).forEach(p => {\n    if (obj2.hasOwnProperty(p)) {\n      Object.defineProperty(obj1, p, {\n        value: obj2[p],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      })\n    }\n  })\n}\n","import {h} from './h'\nimport {patch} from './patch'\nimport {mixin} from './mixin'\n\nvar rAF = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || window.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16) }\n\n/**\n * @type {object} dataStore A pseudo-private property using Date object to store the component's state.\n */\nconst dataStore = new Date().getTime()\n\n/**\n * @class Class to create a component\n */\nexport class Component {\n  /**\n   * Constructor for Component class.\n   * @typedef {object} props An object of property/values to configure the class instance.\n   * @property {string|element} props.container The container element in which to render the component.\n   * @property {state} [props.state] The state object of the component. This can be of type boolean, string, number, object or array.\n   * @property {function} props.render A function that returns nodes to render to the DOM.\n   */\n  constructor(props) {\n    /** @type {props} */\n    if (!props) props = {}\n    this.selector = props.container || props.root ||  'body'\n    \n    if (props.render) {\n      this.render = props.render\n    }\n    \n    if (props.state) {\n      this.state = props.state\n    }\n\n    this.oldNode = null\n    if (this.selector) {\n      this.container = document.querySelector(this.selector)\n    }\n    this.componentShouldUpdate = true\n    \n    this.mounted = false\n    this.element\n    \n    /**\n     * Handle lifecycle methods.\n     */\n    if (props.beforeCreateComponent) {\n      this.beforeCreateComponent = props.beforeCreateComponent\n    }\n    // Alias for React lifecycle hook:\n    if (props.componentWillMount || this.componentWillMount) {\n      this.beforeCreateComponent = props.componentWillMount || this.componentWillMount\n    }\n    if (props.componentWasCreated) {\n      this.componentWasCreated = props.componentWasCreated\n    }\n    // Alias for React lifecycle hook:\n    if (props.componentDidMount || this.componentDidMount) {\n      this.componentWasCreated = props.componentDidMount || this.componentDidMount\n    }\n    if (props.componentWillUpdate) {\n      this.componentWillUpdate = props.componentWillUpdate\n    }\n    if (props.componentDidUpdate) {\n      this.componentDidUpdate = props.componentDidUpdate\n    }\n    if (props.componentWillUnmount) {\n      this.componentWillUnmount = props.componentWillUnmount\n    }\n  }\n\n  /**\n   * Define getters and setters for state.\n   */\n  set state(data) {\n    this[dataStore] = data\n    rAF(() => this.update())\n  }\n\n  get state() {\n    return this[dataStore]\n  }\n  \n  /**\n   * Method to set a component's state.\n   * @param {string|number|boolean|object|array} data The data to set.\n   * @param {number} [position] The index of an array whose data you want to set.\n   */\n  setState(data, position) {\n    if (typeof data === 'function') {\n      const state = data.call(this, this.state)\n      if (typeof state !== 'function' && !!state) this.setState(state)\n    }\n    if (Array.isArray(this.state)) {\n      const state = this.state\n      if (position || position === 0) {\n        if (typeof state[position] === 'object') {\n          mixin(state[position], data)\n          this.state = state\n        } else {\n          state[position] = data\n          this.state = state\n        }\n      } else {\n        this.state = state\n      }\n    } else if (typeof this.state === 'object') {\n      const state = this.state\n      mixin(state, data)\n      this.state = state\n    } else {\n      this.state = data\n    }\n  }\n\n  /**\n   * Function to render component after data changes.\n   * If data is passed as argument, it will be used.\n   * Otherwise state will be used.\n   * @param {boolean|number|string|object|array} [data ]\n   * @returns void\n   */\n  update(data) {\n    if (!this.render) return\n\n    // If componentShouldUpdate is set to false, render one time only.\n    // All other updates will be ignored.\n    if (!this.componentShouldUpdate && this.mounted) return\n\n    // If data is 0 or non-boolean, use,\n    // else use component state.\n    let __data  = this.state\n    if (data !== true && data) __data = data\n\n    if (this.container && typeof this.container === 'string') {\n      this.selector = this.container\n      this.container = document.querySelector(this.container)\n    }\n\n    // Check if vnode already exists.\n    // Used for deciding whether to fire lifecycle events.\n    const __oldNode = this.oldNode\n    const __render = this.render\n    function testIfVNodesDiffer(data) {\n      try {\n        if (JSON.stringify(this.oldNode) === JSON.stringify(__render(data))) {\n          return false\n        } else {\n          return true\n        }\n      } catch(err) {\n        return true\n      }\n    }\n    // Create virtual dom and check if component id already exists in document.\n    const vdom = this.render(__data)\n    let elem\n    if (vdom && vdom.props && vdom.props.id) {\n      try {\n        elem = this.container.querySelector(`#${vdom.props.id}`)\n      } catch(err) {}\n    }\n\n    // If component element id already exists in DOM, \n    // remove it before rendering the component.\n    if (elem && !this.mounted) {\n      elem.parentNode.removeChild(elem)\n    }\n\n    // Patch DOM with component update.\n    this.element = patch(\n      this.oldNode,\n      (this.oldNode = this.render(__data)),\n      this.element,\n      this.container\n    )\n    if (this.mounted && this.oldNode && testIfVNodesDiffer(__data)) {\n      this.componentWillUpdate && this.componentWillUpdate(this)\n    } else {\n      this.beforeCreateComponent && this.beforeCreateComponent(this)\n      this.componentWasCreated && this.componentWasCreated(this)\n      this.mounted = true\n      return\n    }\n    this.componentDidUpdate && testIfVNodesDiffer(__data) && this.componentDidUpdate(this)\n  }\n  \n  /**\n   * Method to destroy component.\n   * First unbind events.\n   * Then remove component element from DOM.\n   * Also null out component properties.\n   * @returns void\n   */\n  unmount() {\n    const self = this\n    const eventWhitelist = ['click', 'dblclick', 'mousedown','mouseup', 'mouseover','mouseout', 'mouseleave', 'select', 'input', 'change', 'keydown', 'keypress', 'keyup', 'submit']\n    if (!this.element) return\n    this.componentWillUnmount && this.componentWillUnmount(this)\n    eventWhitelist.map(event => {\n      this.element.removeEventListener(event, this)\n    })\n    this.container.removeChild(this.element)\n    this.container = undefined\n    for (let key in this) {\n      delete this[key]\n    }\n    delete this.state\n    this.update = undefined\n    this.unmount = undefined\n  }\n}\n\n// Polyfill for Element.closest:\nif (window.Element && !Element.prototype.closest) {\n  Element.prototype.closest = \n  function(s) {\n    let matches = (this.document || this.ownerDocument).querySelectorAll(s)\n    let i\n    let el = this\n    do {\n      i = matches.length\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while ((i < 0) && (el = el.parentElement))\n    return el\n  }\n}\n","import {h, Component} from 'composi'\n\nexport const title = new Component({\n  container: 'header',\n  render: (message) => {\n    return (\n      <nav>\n        <i className=\"fa fa-film fa-2x text-white my-auto\"></i>\n        <h1>Composi {message}</h1>\n      </nav>\n    )\n  }\n})\n","import {h} from 'composi';\n\nconst width = 110;\n\nconst styles = {\n  starsInner: {\n    width: `${width}px`\n  },\n  starsEmptyInner: {\n    position: 'absolute',\n    width: `${width}px`\n  },\n  starsOuter: {\n    overflow: 'hidden'\n  },\n  star: {\n    padding: '1px'\n  }\n};\n\nconst cropWidth = (rating) => {\n  return Math.floor(rating * width / 5);\n};\n\nconst StarRating = (props) => {\n\n  const containerStyle = { width: `${cropWidth(props.rating)}px` };\n\n  return (\n    <div>\n      <div style={styles.starsOuter}>\n        <div style={containerStyle}>\n          <div style={styles.starsEmptyInner}>\n            <i className=\"fa fa-star-o fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star-o fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star-o fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star-o fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star-o fa-lg\" style={styles.star}></i>\n          </div>\n          <div style={styles.starsInner}>\n            <i className=\"fa fa-star fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star fa-lg\" style={styles.star}></i>\n            <i className=\"fa fa-star fa-lg\" style={styles.star}></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default StarRating;","import {h} from 'composi';\nimport StarRating from '../starRating';\n\nconst MovieCard = (props) => (\n  <div className=\"movie-card\">\n    <div className=\"movie-card card\">\n      <img className=\"card-img-top\" src={props.movie.imageUrl} alt=\"\" />\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{props.movie.title}</h4>\n        <h6 className=\"card-subtitle mb-2 text-muted\">{props.movie.subtitle}</h6>\n        <p className=\"text-justify\" style={{fontSize: '14px'}}>{props.movie.description}</p>\n      </div>\n      <div className=\"card-footer\">\n        <div className=\"clearfix\">\n          <div className=\"float-left mt-1\">\n            <StarRating rating={props.movie.rating} />\n          </div>\n          <div className=\"card-footer-badge float-right badge badge-primary badge-pill\">{props.movie.rating}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default MovieCard;\n","import {h} from 'composi';\nimport MovieCard from './movieCard';\n\nconst getMovies = (movies) => {\n  return (\n    <div className=\"card-deck\">\n      {\n        movies.map(movie => <MovieCard key={movie.id} movie={movie} />)\n      }\n    </div>\n  );\n};\n\nconst MovieList = (props) => (\n  <div>\n    {getMovies(props.movies)}\n  </div>\n);\n\nexport default MovieList;\n","export const movies = [\n  {\n    \"id\": 100,\n    \"title\": \"Kingsglaive\",\n    \"subtitle\": \"Final Fantasy XV\",\n    \"description\": \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    \"year\": 2016,\n    \"imageUrl\": \"../images/Kingsglaive_Final_Fantasy_XV.jpg\",\n    \"rating\": 4.5\n  },\n  {\n    \"id\": 200,\n    \"title\": \"Final Fantasy\",\n    \"subtitle\": \"Spirits Within\",\n    \"description\": \"A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.\",\n    \"year\": 2001,\n    \"imageUrl\": \"../images/Final_Fantasy_Spirits_Within.jpg\",\n    \"rating\": 4.5\n  },\n  {\n    \"id\": 300,\n    \"title\": \"Ghost In The Shell\",\n    \"subtitle\": \"Ghost In The Shell\",\n    \"description\": \"A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).\",\n    \"year\": 2008,\n    \"imageUrl\": \"../images/Ghost_In_The_Shell_2_0.jpg\",\n    \"rating\": 5\n  },\n  {\n    \"id\": 400,\n    \"title\": \"Appleseed Alpha\",\n    \"subtitle\": \"Appleseed Alpha\",\n    \"description\": \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    \"year\": 2014,\n    \"imageUrl\": \"../images/Appleseed_Alpha.jpg\",\n    \"rating\": 3.8\n  },\n  {\n    \"id\": 500,\n    \"title\": \"Resident Evil\",\n    \"subtitle\": \"Vendetta\",\n    \"description\": \"Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.\",\n    \"year\": 2014,\n    \"imageUrl\": \"../images/Resident_Evil_Vendetta.jpg\",\n    \"rating\": 4.2\n  }\n]\n","import {movies} from './movies.js';\n\nexport default class MovieService {\n  static getMovies() {\n    return movies ? movies : [];\n  }\n}\n","import { h, Component } from 'composi';\nimport MovieList from './movieList';\nimport MovieService from '../../services/movieService';\n\nexport default class Movies extends Component {\n\n  constructor(props) {\n    super(props);\n    this.container = 'section'\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState(() => ({ movies: MovieService.getMovies() }));\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={{marginLeft: '-15px'}}>\n        <div className=\"d-flex flex-row\">          \n          <div className=\"col-sm-12\">\n            <MovieList movies={this.state.movies} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import {h, Component} from 'composi'\nimport {title} from './components/title'\nimport Movies from './components/movie/movies'\n\n// Set state on component.\n// Will cause component to render.\ntitle.setState('Movie Cards')\n\nnew Movies()\n"],"names":["h","type","props","args","node","children","length","Array","isArray","shift","map","push","item","mixin","obj1","obj2","result","i","patch","oldNode","newNode","element","container","diffAndPatch","svg","nextSibling","insertBefore","createElement","oldProps","keys","forEach","value","key","oldValue","setProps","len","oldLen","oldKeyed","oldElements","keyed","k","oldElement","childNodes","oldChild","oldKey","getKey","j","newChild","newKey","keyedNode","removeElement","reusableNode","nodeValue","data","document","body","name","style","test","toLowerCase","namespaceURI","setAttributeNS","setAttribute","removeAttribute","createTextNode","createElementNS","appendChild","child","removeChild","hasOwnProperty","p","defineProperty","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","dataStore","Date","getTime","Component","selector","root","render","state","this","querySelector","componentShouldUpdate","mounted","beforeCreateComponent","componentWillMount","componentWasCreated","componentDidMount","componentWillUpdate","componentDidUpdate","componentWillUnmount","position","call","setState","babelHelpers.typeof","__data","__render","vdom","elem","id","err","parentNode","testIfVNodesDiffer","JSON","stringify","removeEventListener","event","undefined","update","unmount","_this2","Element","prototype","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","title","message","className","styles","width","StarRating","rating","containerStyle","Math","floor","starsOuter","starsEmptyInner","star","starsInner","MovieCard","src","movie","imageUrl","alt","subtitle","fontSize","description","MovieList","movies","MovieService","Movies","getMovies","marginLeft"],"mappings":"yBAMA,SAAgBA,EAAEC,EAAMC,8BAAUC,2DAC5BC,SACEC,KAGCF,EAAKG,QAENC,MAAMC,QAASJ,EAAOD,EAAKM,WACxBC,IAAI,mBAAQP,EAAKQ,KAAKC,KAEV,MAARR,GAAgC,kBAATA,IAChB,iBAATA,IAAoBA,GAAc,MAChCO,KAAKP,UAIK,iBAATH,GACTA,OAAMC,MAAOA,MAAaG,YAC3BJ,EAAKC,MAAaG,GCnBxB,SAASQ,EAAMC,EAAMC,OACbC,SACD,IAAIC,KAAKH,IACLG,GAAKH,EAAKG,OAEd,IAAIA,KAAKF,IACLE,GAAKF,EAAKE,UAEZD,EAUT,SAAgBE,EAAMC,EAASC,EAASC,EAASC,UAuHjD,SAASC,EAAaD,EAAWD,EAASF,EAASC,EAASI,EAAKC,MAEhD,MAAXN,IACQG,EAAUI,aAAaC,EAAcP,EAASI,GAAMH,QAEzD,GAAoB,MAAhBD,EAAQnB,MAAgBmB,EAAQnB,OAASkB,EAAQlB,KAAM,CA9B7CoB,EA+BLA,EA/BcO,EA+BLT,EAAQjB,MA/BOA,EA+BAkB,EAAQlB,aA9BzC2B,KAAKhB,EAAMe,EAAU1B,IAAQ4B,QAAQ,gBACtCC,EAAQ7B,EAAM8B,GACdC,EAAmB,UAARD,GAA2B,YAARA,EAAoBX,EAAQW,GAAOJ,EAASI,GAE1ED,IAAUE,GAAUC,EAASb,EAASW,EAAKD,EAAOE,OA4BhDT,GAAwB,QAAjBJ,EAAQnB,aACfkC,EAAMf,EAAQf,SAASC,OACzB8B,EAASjB,EAAQd,SAASC,OAC1B+B,KACAC,KACAC,KAEAC,EAAI,EACDA,EAAIJ,GAAQ,KACbK,EAAcH,EAAYE,GAAKnB,EAAQqB,WAAWF,GAClDG,EAAWxB,EAAQd,SAASmC,GAC5BI,EAASC,EAAOF,GAChB,MAAQC,IAAQP,EAASO,IAAWH,EAAYE,gBAIlD1B,EAAI,EAAG6B,EAAI,EACRA,EAAIX,GAAK,KACVM,EAAaH,EAAYrB,GACzB0B,EAAWxB,EAAQd,SAASY,GAC5B8B,EAAW3B,EAAQf,SAASyC,GAC5BF,EAASC,EAAOF,MAChBJ,EAAMK,gBAKNI,EAASH,EAAOE,GAChBE,EAAYZ,EAASW,OACrB,MAAQA,GACN,MAAQJ,MACGvB,EAASoB,EAAYE,EAAUI,EAAUvB,kBAK7CwB,EAASzB,EAAaF,EAAS4B,EAAU,GAAIA,EAAU,GAAIF,EAAUvB,IAAQP,IACxFgC,EAAU,GAAK5B,EAAQK,aAAauB,EAAU,GAAIR,IAAelB,EAAaF,EAAS4B,EAAU,GAAIA,EAAU,GAAIF,EAAUvB,GAAOD,EAAaF,EAASoB,EAAY,KAAMM,EAAUvB,KAEhLwB,GAAUD,aAKb9B,EAAImB,GAAQ,KACbO,EAAWxB,EAAQd,SAASY,GAC5B2B,EAASC,EAAOF,GAChB,MAAQC,GAAQM,EAAc7B,EAASiB,EAAYrB,eAIlDY,KAAKQ,GAAUP,QAAQ,gBACxBmB,EAAYZ,EAASL,GACrBmB,EAAeF,EAAU,GACxBV,EAAMY,EAAajD,MAAM8B,QACdX,EAAS4B,EAAU,WAG5B5B,GAAWD,IAAYC,EAAQ+B,YACjB,iBAAZhC,GAA2C,iBAAZD,IAChCiC,UAAYhC,KAEVE,EAAUI,aAClBC,EAAcP,EAASI,GACtBC,EAAcJ,KAEHC,EAAWG,EAAaN,EAAQkC,QAnGpD,IAAuBhC,EAASO,EAAU1B,SAsGjCmB,EAnMAE,CAAaD,GAAagC,SAASC,KAAMlC,EAASF,EAASC,GAqBpE,SAASc,EAASb,EAASmC,EAAMzB,EAAOE,MACzB,QAATuB,QACG,GAAa,UAATA,GAAqC,iBAAVzB,MAC/B,IAAIyB,KAAQ3C,EAAMoB,EAAWF,EAAQA,SAChC0B,MAAMD,GAAQzB,EAAMyB,GAAQ,IAAM,QAG9B,IAAVzB,IAAaA,GAAgB,IAEpB,cAATyB,IAAsBA,EAAO,SAC7B,SAASE,KAAKF,KAAOA,EAAOA,EAAKG,eAER,+BAAzBtC,EAAQuC,eAA+CvC,EAAQmC,GAAQzB,GAItD,mBAAVA,IACHA,EAES,eAATyB,KACMK,eAAe,+BAAgC,OAAQ9B,KACvD+B,aAAa,OAAQ/B,MAErB+B,aAAaN,EAAMzB,KAGrBgC,gBAAgBP,IA0BhC,SAAS7B,EAAcvB,EAAMoB,SACJ,iBAATpB,EAAoBkD,SAASU,eAAe5D,IAhBxCA,EAgB2DA,EAfvEiB,GAAWG,GADOA,EAgB2DA,IAfvC,QAAdpB,EAAKH,MACjCqD,SAASW,gBAAgB,6BAA8B7D,EAAKH,MAC5DqD,SAAS3B,cAAcvB,EAAKH,aAEvB4B,KAAKzB,EAAKF,OAAO4B,QAAQ,mBAAOI,EAASb,EAASW,EAAK5B,EAAKF,MAAM8B,QACpE3B,SAASK,IAAI,mBAASW,EAAQ6C,YAAYvC,EAAcwC,EAAO3C,MAC7DH,GAPT,IAAoBjB,EAAMoB,EAClBH,EAsBR,SAASwB,EAAOzC,MACVA,GAAQA,EAAKF,aACRE,EAAKF,MAAM8B,IAwBtB,IAAMkB,EAAgB,SAAC5B,EAAWD,UAAYC,EAAU8C,YAAY/C,IC9HpE,IAAaR,EAAQ,SAACC,EAAMC,UACnBc,KAAKd,GAAMe,QAAQ,YACpBf,EAAKsD,eAAeC,WACfC,eAAezD,EAAMwD,SACnBvD,EAAKuD,aACF,cACE,gBACE,umDCRlBE,EAAMC,OAAOC,uBACZD,OAAOE,6BACPF,OAAOG,0BACPH,OAAOI,yBACP,SAASC,UAAaC,WAAWD,EAAI,KAKpCE,GAAY,IAAIC,MAAOC,UAKhBC,wBAQCjF,aAELA,IAAOA,WACPkF,SAAWlF,EAAMoB,WAAapB,EAAMmF,MAAS,OAE9CnF,EAAMoF,cACHA,OAASpF,EAAMoF,QAGlBpF,EAAMqF,aACHA,MAAQrF,EAAMqF,YAGhBpE,QAAU,KACXqE,KAAKJ,gBACF9D,UAAYgC,SAASmC,cAAcD,KAAKJ,gBAE1CM,uBAAwB,OAExBC,SAAU,OACVtE,QAKDnB,EAAM0F,6BACHA,sBAAwB1F,EAAM0F,wBAGjC1F,EAAM2F,oBAAsBL,KAAKK,2BAC9BD,sBAAwB1F,EAAM2F,oBAAsBL,KAAKK,oBAE5D3F,EAAM4F,2BACHA,oBAAsB5F,EAAM4F,sBAG/B5F,EAAM6F,mBAAqBP,KAAKO,0BAC7BD,oBAAsB5F,EAAM6F,mBAAqBP,KAAKO,mBAEzD7F,EAAM8F,2BACHA,oBAAsB9F,EAAM8F,qBAE/B9F,EAAM+F,0BACHA,mBAAqB/F,EAAM+F,oBAE9B/F,EAAMgG,4BACHA,qBAAuBhG,EAAMgG,iEAqB7B7C,EAAM8C,MACO,mBAAT9C,EAAqB,KACxBkC,EAAQlC,EAAK+C,KAAKZ,KAAMA,KAAKD,OACd,mBAAVA,GAA0BA,GAAOC,KAAKa,SAASd,MAExDhF,MAAMC,QAAQgF,KAAKD,OAAQ,KACvBA,EAAQC,KAAKD,MACfY,GAAyB,IAAbA,EACiB,WAA3BG,EAAOf,EAAMY,OACTZ,EAAMY,GAAW9C,QAClBkC,MAAQA,MAEPY,GAAY9C,OACbkC,MAAQA,QAGVA,MAAQA,OAEV,GAA0B,WAAtBe,EAAOd,KAAKD,OAAoB,KACnCA,EAAQC,KAAKD,QACbA,EAAOlC,QACRkC,MAAQA,YAERA,MAAQlC,iCAWVA,MACAmC,KAAKF,SAILE,KAAKE,wBAAyBF,KAAKG,cAIpCY,EAAUf,KAAKD,OACN,IAATlC,GAAiBA,IAAMkD,EAASlD,GAEhCmC,KAAKlE,WAAuC,iBAAnBkE,KAAKlE,iBAC3B8D,SAAWI,KAAKlE,eAChBA,UAAYgC,SAASmC,cAAcD,KAAKlE,gBAMzCkF,EAAWhB,KAAKF,OAahBmB,EAAOjB,KAAKF,OAAOiB,GACrBG,YACAD,GAAQA,EAAKvG,OAASuG,EAAKvG,MAAMyG,SAE1BnB,KAAKlE,UAAUmE,kBAAkBgB,EAAKvG,MAAMyG,IACnD,MAAMC,OAKNF,IAASlB,KAAKG,WACXkB,WAAWzC,YAAYsC,QAIzBrF,QAAUH,EACbsE,KAAKrE,QACJqE,KAAKrE,QAAUqE,KAAKF,OAAOiB,GAC5Bf,KAAKnE,QACLmE,KAAKlE,aAEHkE,KAAKG,SAAWH,KAAKrE,SAAW2F,EAAmBP,gBAGhDX,uBAAyBJ,KAAKI,sBAAsBJ,WACpDM,qBAAuBN,KAAKM,oBAAoBN,gBAChDG,SAAU,QAJVK,qBAAuBR,KAAKQ,oBAAoBR,WAOlDS,oBAAsBa,EAAmBP,IAAWf,KAAKS,mBAAmBT,eAzCxEsB,EAAmBzD,cAEpB0D,KAAKC,UAAUxB,KAAKrE,WAAa4F,KAAKC,UAAUR,EAASnD,IAK7D,MAAMuD,UACC,oDA8CNpB,KAAKnE,cACL6E,sBAAwBV,KAAKU,qBAAqBV,OAF/B,QAAS,WAAY,YAAY,UAAW,YAAY,WAAY,aAAc,SAAU,QAAS,SAAU,UAAW,WAAY,QAAS,UAGxJ9E,IAAI,cACZW,QAAQ4F,oBAAoBC,YAE9B5F,UAAU8C,YAAYoB,KAAKnE,cAC3BC,eAAY6F,MACZ,IAAInF,KAAOwD,YACPA,KAAKxD,UAEPwD,KAAKD,WACP6B,YAASD,OACTE,aAAUF,+BAvIP9D,mBACH2B,GAAa3B,IACd,kBAAMiE,EAAKF,kCAIR5B,KAAKR,YAsIZP,OAAO8C,UAAYA,QAAQC,UAAUC,kBAC/BD,UAAUC,QAClB,SAASC,OACHC,GAAWnC,KAAKlC,UAAYkC,KAAKoC,eAAeC,iBAAiBH,GACjEzG,SACA6G,EAAKtC,cAEHmC,EAAQrH,SACHW,GAAK,GAAK0G,EAAQ/G,KAAKK,KAAO6G,WAC/B7G,EAAI,IAAO6G,EAAKA,EAAGC,uBACtBD,ICnOJ,IAAME,EAAQ,IAAI7C,aACZ,gBACH,SAAC8C,UAELjI,oBACKkI,UAAU,sECHfC,qBAEQC,mCAGA,iBACAA,8BAGA,wBAGD,QAQPC,EAAa,SAACnI,OAJDoI,EAMXC,GAAmBH,OANRE,EAM4BpI,EAAMoI,OAL5CE,KAAKC,MAnBA,IAmBMH,EAAiB,iBAQjCtI,sBACOyD,MAAO0E,EAAOO,qBACZjF,MAAO8E,YACL9E,MAAO0E,EAAOQ,wBACdT,UAAU,qBAAqBzE,MAAO0E,EAAOS,cAC7CV,UAAU,qBAAqBzE,MAAO0E,EAAOS,cAC7CV,UAAU,qBAAqBzE,MAAO0E,EAAOS,cAC7CV,UAAU,qBAAqBzE,MAAO0E,EAAOS,cAC7CV,UAAU,qBAAqBzE,MAAO0E,EAAOS,iBAE7CnF,MAAO0E,EAAOU,mBACdX,UAAU,mBAAmBzE,MAAO0E,EAAOS,cAC3CV,UAAU,mBAAmBzE,MAAO0E,EAAOS,cAC3CV,UAAU,mBAAmBzE,MAAO0E,EAAOS,cAC3CV,UAAU,mBAAmBzE,MAAO0E,EAAOS,cAC3CV,UAAU,mBAAmBzE,MAAO0E,EAAOS,YCzCpDE,EAAY,SAAC5I,UACjBF,SAAKkI,UAAU,uBACRA,UAAU,4BACRA,UAAU,eAAea,IAAK7I,EAAM8I,MAAMC,SAAUC,IAAI,cACxDhB,UAAU,qBACTA,UAAU,gBAAoBc,MAAMhB,eACpCE,UAAU,mCAAuCc,MAAMG,iBACxDjB,UAAU,eAAezE,OAAQ2F,SAAU,WAAgBJ,MAAMK,uBAEjEnB,UAAU,wBACRA,UAAU,qBACRA,UAAU,qBACZG,GAAWC,OAAQpI,EAAM8I,MAAMV,mBAE7BJ,UAAU,kEAAsEc,MAAMV,aCJ/FgB,EAAY,SAACpJ,UACjBF,aATEA,SAAKkI,UAAU,aAUJhI,EAAMqJ,OARN7I,IAAI,mBAASV,EAAC8I,GAAU9G,IAAKgH,EAAMrC,GAAIqC,MAAOA,SCPhDO,OAEH,UACG,uBACG,+BACG,sKACP,cACI,oDACF,SAGJ,UACG,yBACG,6BACG,iIACP,cACI,oDACF,SAGJ,UACG,8BACG,iCACG,0JACP,cACI,8CACF,OAGJ,UACG,2BACG,8BACG,gMACP,cACI,uCACF,SAGJ,UACG,yBACG,uBACG,sKACP,cACI,8CACF,MC1COC,8FAEVD,eCAUE,yBAEPvJ,4EACJA,aACDoB,UAAY,YACZiE,uVAL2BJ,uDAW3BkB,SAAS,kBAASkD,OAAQC,EAAaE,uDAK1C1J,SAAKkI,UAAU,kBAAkBzE,OAAQkG,WAAY,mBAC9CzB,UAAU,4BACRA,UAAU,eACZoB,GAAUC,OAAQ/D,KAAKD,MAAMgE,qBCjB1CvB,EAAM3B,SAAS,eAEf,IAAIoD"}